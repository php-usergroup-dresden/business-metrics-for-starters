version: '3'

services:
  php:
    image: php:7.3-fpm-alpine
    container_name: bmfs_php
    restart: 'on-failure'
    volumes:
      - ./:/repo
    networks:
      - bmfs_network

  nginx:
    image: nginx:latest
    container_name: bmfs_nginx
    restart: 'on-failure'
    volumes:
      - ./:/repo
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - default
      - bmfs_network
    labels:
      - "traefik.frontend.rule=HostRegexp:{subdomain:[a-z]+}.business-metrics.de"
    depends_on:
      - php
      - prometheus

  prometheus:
    image: prom/prometheus:latest
    container_name: bmfs_prometheus
    restart: 'on-failure'
    volumes:
      - ./.docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus:/prometheus
    networks:
      - bmfs_network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=32d'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana:latest
    container_name: bmfs_grafana
    restart: 'on-failure'
    volumes:
      - ./data/grafana:/var/lib/grafana
    networks:
      - bmfs_network
    depends_on:
      - prometheus

  cadvisor:
    image: google/cadvisor:latest
    container_name: bmfs_cadvisor
    restart: 'on-failure'
    networks:
      - bmfs_network
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro

networks:
  default:
    external:
      name: "gateway"
  bmfs_network: